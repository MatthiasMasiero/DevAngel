{
  "source": "cloudwatch",
  "incident_input": {
    "alarms": [
      {
        "AlarmName": "HighErrorRate",
        "AlarmDescription": "Error rate exceeded 5%",
        "StateValue": "ALARM",
        "StateReason": "Threshold Crossed: 1 out of the last 1 datapoints [8.5 (25/10/25 21:55:00)] was greater than the threshold (5.0).",
        "StateChangeTime": "2025-10-25T21:55:00.000Z",
        "MetricName": "ErrorRate",
        "Namespace": "AWS/ApplicationELB",
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "app/checkout-api-lb/50dc6c495c0c9188"
          }
        ]
      },
      {
        "AlarmName": "DatabaseConnectionPoolExhausted",
        "AlarmDescription": "Database connection pool utilization > 90%",
        "StateValue": "ALARM",
        "StateReason": "Threshold Crossed: 2 out of the last 2 datapoints [95.0 (25/10/25 21:56:00), 98.0 (25/10/25 21:57:00)] was greater than the threshold (90.0).",
        "StateChangeTime": "2025-10-25T21:57:00.000Z",
        "MetricName": "DatabaseConnections",
        "Namespace": "AWS/RDS",
        "Dimensions": [
          {
            "Name": "DBInstanceIdentifier",
            "Value": "checkout-db-prod"
          }
        ]
      }
    ],
    "logs": [
      {
        "@timestamp": "2025-10-25T21:54:30.123Z",
        "@message": "[ERROR] 2025-10-25T21:54:30.123Z\t12345678-1234-1234-1234-123456789012\tTimeout connecting to payment service\n",
        "@logGroup": "/aws/lambda/checkout-processor",
        "@logStream": "2025/10/25/[$LATEST]abcd1234",
        "level": "ERROR"
      },
      {
        "@timestamp": "2025-10-25T21:54:31.456Z",
        "@message": "Traceback (most recent call last):\n  File \"/var/task/payment_handler.py\", line 45, in process_payment\n    response = payment_client.charge(amount)\n  File \"/var/task/lib/payment_client.py\", line 88, in charge\n    return self._make_request(payload)\nTimeoutError: Request timed out after 5000ms",
        "@logGroup": "/aws/lambda/checkout-processor",
        "@logStream": "2025/10/25/[$LATEST]abcd1234",
        "level": "ERROR"
      },
      {
        "@timestamp": "2025-10-25T21:54:45.789Z",
        "@message": "[ERROR] 2025-10-25T21:54:45.789Z\t87654321-4321-4321-4321-210987654321\tPayment processing failed: Connection reset by peer\n",
        "@logGroup": "/aws/lambda/checkout-processor",
        "@logStream": "2025/10/25/[$LATEST]efgh5678",
        "level": "ERROR"
      },
      {
        "@timestamp": "2025-10-25T21:55:12.345Z",
        "@message": "java.sql.SQLException: Cannot get a connection, pool error Timeout waiting for idle object\n\tat com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)\n\tat com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:145)\n\tat com.checkout.db.DatabaseManager.getConnection(DatabaseManager.java:67)\n\tat com.checkout.service.OrderService.createOrder(OrderService.java:123)",
        "@logGroup": "/aws/ecs/checkout-api",
        "@logStream": "ecs/checkout-api/1a2b3c4d5e6f",
        "level": "ERROR"
      },
      {
        "@timestamp": "2025-10-25T21:55:30.678Z",
        "@message": "[ERROR] 2025-10-25T21:55:30.678Z\t11111111-2222-3333-4444-555555555555\tTimeout connecting to payment service\n",
        "@logGroup": "/aws/lambda/checkout-processor",
        "@logStream": "2025/10/25/[$LATEST]ijkl9012",
        "level": "ERROR"
      },
      {
        "@timestamp": "2025-10-25T21:56:15.234Z",
        "@message": "ERROR: Database connection failed\n    at /app/src/database/connection.js:45:12\n    at /app/src/services/order-service.js:78:23\n    at /app/src/controllers/checkout-controller.js:156:18\nError: connect ETIMEDOUT 10.0.1.25:5432",
        "@logGroup": "/aws/ecs/checkout-api",
        "@logStream": "ecs/checkout-api/2b3c4d5e6f7g",
        "level": "ERROR"
      },
      {
        "@timestamp": "2025-10-25T21:56:45.567Z",
        "@message": "[WARN] 2025-10-25T21:56:45.567Z\t66666666-7777-8888-9999-000000000000\tRetrying payment request (attempt 3/3)\n",
        "@logGroup": "/aws/lambda/checkout-processor",
        "@logStream": "2025/10/25/[$LATEST]mnop3456",
        "level": "WARN"
      },
      {
        "@timestamp": "2025-10-25T21:57:02.890Z",
        "@message": "Exception in thread \"pool-2-thread-15\" java.lang.RuntimeException: Payment gateway unreachable\n\tat com.checkout.payment.PaymentGateway.processPayment(PaymentGateway.java:234)\n\tat com.checkout.service.PaymentService.handlePayment(PaymentService.java:89)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
        "@logGroup": "/aws/ecs/checkout-api",
        "@logStream": "ecs/checkout-api/3c4d5e6f7g8h",
        "level": "ERROR"
      },
      {
        "@timestamp": "2025-10-25T21:57:30.123Z",
        "@message": "[ERROR] 2025-10-25T21:57:30.123Z\t99999999-aaaa-bbbb-cccc-dddddddddddd\tMax retries exceeded for payment processing\n",
        "@logGroup": "/aws/lambda/checkout-processor",
        "@logStream": "2025/10/25/[$LATEST]qrst7890",
        "level": "ERROR"
      }
    ],
    "deploy": {
      "sha": "a1b2c3d",
      "message": "Reduce payment timeout from 30s to 5s for faster failover",
      "timestamp": "2025-10-25T21:45:00Z",
      "changed_files": [
        "src/payment_handler.py",
        "lib/payment_client.py",
        "config/timeout.json",
        "src/services/order-service.js",
        "com/checkout/payment/PaymentGateway.java"
      ],
      "deployer": "ci-cd-pipeline"
    }
  }
}
